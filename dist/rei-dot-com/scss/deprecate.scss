// DON'T MOVE THIS FILE
// It will be copied into `dist`

// Enable/disable warnings
$cdr-warn: true !default;

// year/release cycle of cedar
// UPDATE WITH EACH RELEASE
$current-release-year: 2019;
$current-release-cycle: "fall";

@function getDeprecationDate($year, $cycle) {
  @if $cycle == "winter" {
    @return "#{$year} summer";
  }
  @else if $cycle == "spring" {
    @return "#{$year} fall";
  }
  @else if $cycle == "summer" {
    $nextYear: $year + 1;
    @return "#{$nextYear} winter";
  }
  @else if $cycle == "fall" {
    $nextYear: $year + 1;
    @return "#{$nextYear} spring";
  }
}

@mixin deprecate($year, $cycle, $message) {
  // warnings disabled
  @if ($cdr-warn == false) {
    @content;
  }

  @else {
    @warn "Deprecated code found, remove before the #{getDeprecationDate($year, $cycle)} release: #{$message}";
    @content;
  }
}

@mixin deprecate-variables($year, $cycle, $variables) {
  // warnings disabled
  @if ($cdr-warn == false) {
    @content;
  }

  @else {
    @warn "The following variables have been deprecated and will be removed from `cdr-tokens` in the #{getDeprecationDate($year, $cycle)} release: #{$variables}";
    @content;
  }
}

@mixin deprecate-mixin($year, $cycle, $name, $newName: null) {
  // warnings disabled
  @if ($cdr-warn == false) {
    @content;
  }

  @else if ($newName != null) {
    @warn "Mixin '#{$name}' is deprecated and will be removed from `cdr-tokens` in the #{getDeprecationDate($year, $cycle)} release. Use '#{$newName}' instead";
    @content;
  }

  @else {
    @warn "Mixin '#{$name}' is deprecated and will be removed from `cdr-tokens` in the #{getDeprecationDate($year, $cycle)} release";
    @content;
  }
}
